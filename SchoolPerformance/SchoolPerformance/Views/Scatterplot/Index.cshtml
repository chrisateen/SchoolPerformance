@model IEnumerable<SchoolPerformance.ViewModels.ScatterplotViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">

    <!-- Header -->
    <section class="content-header">
        <div class="container-fluid">

            <!-- Header Title-->
            <div class="row mb-2">
                <div>
                    <h1>Result Scatterplot</h1>
                </div>

            </div>
            <!-- /.header title-->

        </div>
    </section>
    <!-- /.header -->

    <div class="content">

        <div class="container-fluid">

            <div class="row">

                <form class="form-inline col-md-6 mb-2">

                    <div class="input-group col-12">
                        <select id="inputState" class="form-control">
                            <option selected>Choose...</option>
                            <option>...</option>
                        </select>

                        <span class="input-group-append">
                            <button type="submit" class="btn btn-info">
                                <i class="fas fa-search"></i>
                            </button>
                        </span>
                    </div>

                </form>

            </div>

            <div class="chart">
                <canvas id="Scatterplot"></canvas>
            </div>

        </div>
    </div>
</div>

<script>

    var results = @Json.Serialize(Model);


    function generateData() {
        var data = []
        var schools = []

        for (let i = 0, len = results.length; i < len; i++) {

            if (results[i]["p8MEA"] !== null) {

                data.push({

                    x: results[i]["ptfsM6CLA1A"],
                    y: results[i]["p8MEA"]
                });

                schools.push(results[i]["schname"]);
            }
		}

        return [data,schools];
    }

    var data = generateData();

    window.onload = function () {
        var ctx = document.getElementById('Scatterplot').getContext('2d');
        var scatterChart = new Chart(ctx, {
            type: 'scatter',
            data: {
                labels: data[1],
                datasets: [{
                    data: data[0],
                    backgroundColor: "rgba(255, 99, 132, 0.2)",
                    borderColor: "rgba(255, 99, 132)"

                }]
            },
            options: {

                legend : {
                    display: false
                },

                scales : {
                    xAxes: [{
                        type: 'linear',
                        position: 'bottom',
                        ticks: {
                            // Change x axis to percentage
                            callback: function(value, index, values) {
                                return Math.round(value * 100) + '%';
                            }
                        }
                    }]
                },

                tooltips: {
                   callbacks: {
                      label: function(tooltipItem, data) {
                         var label = data.labels[tooltipItem.index];
                           return label + ': (' + Math.round(tooltipItem.xLabel * 100) + '% , '
                               + tooltipItem.yLabel + ')';
                      }
                   }
                }
            }
        });
    };

</script>






