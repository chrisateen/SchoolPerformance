// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolPerformance.Models;

namespace SchoolPerformance.Migrations
{
    [DbContext(typeof(SchoolPerformanceContext))]
    [Migration("20200619161100_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolPerformance.Models.School", b =>
                {
                    b.Property<int>("URN")
                        .HasColumnType("int");

                    b.Property<int>("ESTAB")
                        .HasColumnType("int");

                    b.Property<int>("LA")
                        .HasColumnType("int");

                    b.Property<int>("LAESTAB")
                        .HasColumnType("int");

                    b.Property<string>("SCHNAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("URN");

                    b.ToTable("School");
                });

            modelBuilder.Entity("SchoolPerformance.Models.SchoolContextual", b =>
                {
                    b.Property<int>("URN")
                        .HasColumnType("int");

                    b.Property<int>("ACADEMICYEAR")
                        .HasColumnType("int");

                    b.Property<int?>("NOR")
                        .HasColumnType("int");

                    b.Property<double?>("PNORG")
                        .HasColumnType("float");

                    b.Property<double?>("PNUMEAL")
                        .HasColumnType("float");

                    b.Property<double?>("PNUMFSMEVER")
                        .HasColumnType("float");

                    b.Property<double?>("PSENELK")
                        .HasColumnType("float");

                    b.Property<double?>("PSENELSE")
                        .HasColumnType("float");

                    b.Property<double?>("PTFSM6CLA1A")
                        .HasColumnType("float");

                    b.HasKey("URN", "ACADEMICYEAR");

                    b.ToTable("SchoolContextual");
                });

            modelBuilder.Entity("SchoolPerformance.Models.SchoolDetails", b =>
                {
                    b.Property<int>("URN")
                        .HasColumnType("int");

                    b.Property<string>("ADDRESS3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GENDER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCALITY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POSTCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RELCHAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SCHOOLTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STREET")
                        .HasColumnType("int");

                    b.Property<string>("TOWN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("URN");

                    b.ToTable("SchoolDetails");
                });

            modelBuilder.Entity("SchoolPerformance.Models.SchoolResult", b =>
                {
                    b.Property<int>("URN")
                        .HasColumnType("int");

                    b.Property<int>("ACADEMICYEAR")
                        .HasColumnType("int");

                    b.Property<double?>("ATT8SCR")
                        .HasColumnType("float");

                    b.Property<double?>("ATT8SCR_FSM6CLA1A")
                        .HasColumnType("float");

                    b.Property<double?>("ATT8SCR_NFSM6CLA1A")
                        .HasColumnType("float");

                    b.Property<double?>("P8MEA")
                        .HasColumnType("float");

                    b.Property<double?>("P8MEA_FSM6CLA1A")
                        .HasColumnType("float");

                    b.Property<double?>("P8MEA_NFSM6CLA1A")
                        .HasColumnType("float");

                    b.Property<double?>("PTFSM6CLA1ABASICS_94")
                        .HasColumnType("float");

                    b.Property<double?>("PTFSM6CLA1ABASICS_95")
                        .HasColumnType("float");

                    b.Property<double?>("PTL2BASICS_94")
                        .HasColumnType("float");

                    b.Property<double?>("PTL2BASICS_95")
                        .HasColumnType("float");

                    b.Property<double?>("PTNOTFSM6CLA1ABASICS_94")
                        .HasColumnType("float");

                    b.Property<double?>("PTNOTFSM6CLA1ABASICS_95")
                        .HasColumnType("float");

                    b.HasKey("URN", "ACADEMICYEAR");

                    b.ToTable("SchoolResult");
                });

            modelBuilder.Entity("SchoolPerformance.Models.SchoolContextual", b =>
                {
                    b.HasOne("SchoolPerformance.Models.School", "School")
                        .WithMany("SchoolContextuals")
                        .HasForeignKey("URN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolPerformance.Models.SchoolDetails", b =>
                {
                    b.HasOne("SchoolPerformance.Models.School", "School")
                        .WithOne("SchoolDetails")
                        .HasForeignKey("SchoolPerformance.Models.SchoolDetails", "URN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolPerformance.Models.SchoolResult", b =>
                {
                    b.HasOne("SchoolPerformance.Models.School", "School")
                        .WithMany("SchoolResults")
                        .HasForeignKey("URN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
